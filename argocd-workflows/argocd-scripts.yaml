---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-scripts
  namespace: argo
data:
  add-to-argocd.sh: |
    #!/bin/sh

    echo "Logging into ArgoCD..."
    argocd login argocd-server.argocd.svc.cluster.local --core --insecure --plaintext --grpc-web --username $USERNAME --password $PASSWORD

    cluster_ready=""
    cluster=$1
    while [ -z "$cluster_ready" ]
    do
        sleep 20
        kubectl get cluster $cluster -n autoenvs
        cluster_ready=$(kubectl get cluster $cluster -o json -n autoenvs | jq -r '. | select(.status.phase=="Provisioned")')
    done

    echo "Configuring cluster access..."
    kubectl config set-cluster in-cluster --server=https://kubernetes.default.svc.cluster.local --certificate-authority=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt --embed-certs=true
    kubectl config set-credentials clusterctl --token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
    kubectl config set-context in-cluster --cluster in-cluster --user clusterctl --namespace argocd
    kubectl config use-context in-cluster

    echo "Setting kubeconfig..."
    clusterctl get kubeconfig $cluster -n autoenvs > $HOME/.kube/my-vcluster.yaml
    export KUBECONFIG="$HOME/.kube/config:$HOME/.kube/my-vcluster.yaml"

    echo "Changing kubectl context..."
    kubectl config set-context $cluster --cluster my-vcluster --user my-vcluster

    echo "Adding vcluster $cluster to ArgoCD..."
    argocd cluster add $cluster --label provider=vcluster -y --upsert --insecure

    echo "All done ðŸŽ‰"

  remove-from-argocd.sh: |
    #!/bin/sh

    cluster=$1

    echo "Logging into ArgoCD..."
    argocd login argocd-server.argocd.svc.cluster.local --core --insecure --plaintext --grpc-web --username $USERNAME --password $PASSWORD

    echo "Configuring cluster access..."
    kubectl config set-cluster in-cluster --server=https://kubernetes.default.svc.cluster.local --certificate-authority=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt --embed-certs=true ;
    kubectl config set-credentials clusterctl --token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token) ;
    kubectl config set-context in-cluster --cluster in-cluster --user clusterctl --namespace argocd ;
    kubectl config use-context in-cluster ;

    echo "Setting kubeconfig..."
    clusterctl get kubeconfig $cluster -n autoenvs > $HOME/.kube/my-vcluster.yaml
    export KUBECONFIG="$HOME/.kube/config:$HOME/.kube/my-vcluster.yaml"

    echo "Changing kubectl context..."
    kubectl config set-context $cluster --cluster my-vcluster --user my-vcluster

    echo "Removing vcluster $cluster from ArgoCD..."
    argocd cluster rm $cluster || true